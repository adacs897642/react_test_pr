import React, {Component} from 'react'
import {fetchProfile} from 'actions/profile'
import {connect} from 'react-redux'


class Profile extends Component {
    componentDidMount(){
        const {history}=this.props
        if(localStorage.getItem('login')!=='true')
            history.push('/login')
        else {
            const id = localStorage.getItem('id')
            this.props.fetchProfile(id)
        }
    }

    placePictures =()=>{

        const src = "images/"
        return(
            this.sortMedia().map((soc,item)=>(
                <li key={item}>

                    <a href={soc.link} target="_blank">
                        <img src={src + soc.label+'.png'} alt={soc.label} height="50px" width="50px"/>
                    </a>
                </li>
            ))
        )

    }
    sortMedia =()=>{
        const {social} = this.props.profile.data

        let sort = []
        social.forEach((item)=>{
            if(item.label === 'web')
                sort.unshift(item)
            else sort.push(item)
        })

        return sort

    }

    templateProfile =()=>{
        const {city, languages} = this.props.profile.data
        return(
            <div>
                <h5>Город</h5>
                <ul className="list-group list-group-flush">
                    <li>
                        {city}
                    </li>
                </ul>
                <hr/>
                <h5>Владение языками</h5>
                <ul className="list-group list-group-flush">
                    {languages.map((lang,item)=>(
                            <li key={item}>
                               {lang}
                            </li>
                        ))
                    }
                </ul>
                <hr/>
                <h5>Социальные сети</h5>
                <ul className="list-group list-group-flush">
                    {this.placePictures()}
                </ul>
            </div>


            )
    }

    renderProfile =()=>{
        const {status} = this.props.profile
        let template
        if(status)
            if (status === 'ok')
                template = this.templateProfile()
             else template = <div>Пользователь не найден.</div>
        else template = <div>Идет загрузка...</div>
        return(
            <div>
                {template}
            </div>

        )
    }
    render(){
        return(
            <div>
                <div>
                    <h3>Профиль пользователя</h3>
                    <hr/>
                    {this.renderProfile()}
                </div>
            </div>
        )
    }
}


const mapStateToProps = (state)=>{
    return {
        profile: state.profile
    }
}

const mapDispatchToProps = {
    fetchProfile
}
export default connect(mapStateToProps, mapDispatchToProps)(Profile)